{
  "permissions": {
    "allow": [
      "Bash(bash .claude/commands/scripts/issue-start.sh:*)",
      "Bash(git worktree:*)",
      "mcp__serena__check_onboarding_performed",
      "Bash(bash:*)",
      "Bash(git branch:*)",
      "Bash(taskkill:*)",
      "mcp__serena__list_dir",
      "mcp__serena__think_about_collected_information",
      "Bash(git add:*)",
      "Read(//c/developments/training-tracker-issue-3/**)",
      "mcp__serena__search_for_pattern",
      "mcp__serena__find_symbol",
      "mcp__serena__replace_symbol_body",
      "Bash(python:*)",
      "Bash(uv run ruff check:*)",
      "Bash(uv run mypy:*)",
      "mcp__serena__read_memory",
      "Read(//c/c/developments/training-tracker/**)",
      "Bash(git merge:*)",
      "Bash(node:*)",
      "Bash(pnpm:*)",
      "mcp__serena__get_symbols_overview",
      "Bash(cat:*)",
      "Bash(git checkout:*)",
      "Bash(uv sync:*)",
      "Read(//c/developments/training-tracker-issue-4/**)",
      "Bash(uv run:*)",
      "Read(//c/developments/training-tracker-issue-5/**)",
      "Bash(gh issue view:*)",
      "Bash(cmd //c:*)",
      "WebSearch",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "mcp__serena__find_file",
      "Bash(git pull:*)",
      "Read(//c/developments/training-tracker-issue-7/apps/backend/**)",
      "Read(//c/developments/training-tracker-issue-8/**)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Read(//c/c/developments/**)",
      "mcp__serena__think_about_task_adherence",
      "Bash(uv add:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(gh issue create:*)",
      "Read(//c/developments/training-tracker-issue-24/**)",
      "Read(//c/developments/training-tracker-issue-22/**)",
      "Read(//c/developments/training-tracker-issue-25/**)",
      "Bash(mkdir:*)",
      "Read(//c/developments/training-tracker-issue-23/**)",
      "Bash(gh pr list:*)",
      "Bash(gh issue list:*)",
      "Bash(npx tsc:*)",
      "Bash(gh pr view:*)",
      "Bash(git fetch:*)",
      "WebFetch(domain:github.com)",
      "Bash(pkill:*)",
      "Bash(git diff:*)",
      "Bash(git rm:*)",
      "Bash(for issue in 22 24 26 27 28 29 30 31 32 33)",
      "Bash(do)",
      "Bash(echo:*)",
      "Bash(gh issue close:*)",
      "Bash(done)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "mcp__serena__think_about_whether_you_are_done",
      "mcp__serena__write_memory",
      "Bash(npx vitest run:*)",
      "Bash(npx next build:*)",
      "Read(//c/developments/training-tracker-issue-9/**)",
      "Read(//c/developments/training-tracker-issue-10/apps/frontend/**)",
      "Read(//c/developments/training-tracker-issue-37/**)",
      "Read(//c/developments/training-tracker-issue-10/**)",
      "Bash(curl:*)",
      "Bash(docker:*)",
      "Read(//c/**)",
      "Bash(gh pr create:*)",
      "Bash(git rebase:*)",
      "Bash(ls:*)",
      "Bash(cd:*)",
      "Bash(source:*)",
      "Bash(.venv/Scripts/python.exe:*)",
      "Bash(for:*)",
      "Bash(do echo \"Removing $dir\")",
      "Bash(alembic revision:*)",
      "Bash(npx eslint:*)",
      "Bash(.venv/Scripts/python:*)",
      "Bash(xargs basename:*)",
      "Bash(git remote:*)",
      "Bash(git stash:*)",
      "Bash(git cherry-pick:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsx:*)",
      "Bash(do [ -d \"$dir\" ])",
      "Bash([ ! -f \"$dir\"/*.stories.tsx ])",
      "Bash(do echo \"=== $feature ===\")",
      "Bash(timeout 10 pnpm storybook)",
      "Bash(timeout 10 pnpm build:*)",
      "Bash(do echo \"Adding ''use client'' to $file\")",
      "Bash(xargs:*)",
      "Bash(timeout 30 pnpm dev)",
      "Bash(npx tailwindcss:*)",
      "Bash(timeout:*)",
      "Bash(npx storybook build:*)",
      "Bash(ruff check:*)",
      "Bash(where python)",
      "Bash(/c/Users/nomura.koshiro/AppData/Local/Microsoft/WindowsApps/python.exe -m mypy app --show-error-codes --no-error-summary)",
      "Bash(mypy:*)",
      "Bash(/c/Users/nomura.koshiro/AppData/Local/Microsoft/WindowsApps/python -m mypy app --show-error-codes)",
      "Bash(pip install:*)",
      "Bash(/c/Users/nomura.koshiro/AppData/Local/Microsoft/WindowsApps/python3 -m mypy app/services/exercise_service.py)",
      "Bash(code:*)",
      "mcp__serena__find_referencing_symbols",
      "Bash(head:*)",
      "Bash(while read file)",
      "Bash(do echo \"Fixing $file\" sed -i '/^import React$/d' \"$file\" done)",
      "Bash(git restore:*)",
      "Bash(netstat:*)",
      "WebFetch(domain:localhost)",
      "Bash(awk:*)",
      "Bash(tree:*)",
      "Bash(npm run lint:*)",
      "Bash(rm:*)",
      "Bash(/dev/null)",
      "WebFetch(domain:www.rfc-editor.org)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run format:*)",
      "Bash(npx prettier:*)",
      "Bash(npm run lint:fix:*)",
      "Bash(test:*)"
    ],
    "deny": [],
    "ask": []
  }
}
