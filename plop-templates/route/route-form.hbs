import { Control } from "react-hook-form";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { ControlledInputField } from "@/components/ui/form-field/controlled-form-field";
import { PageLayout } from "@/components/layout/page-layout";
import { PageHeader } from "@/components/layout/page-header";
// TODO: 既存のschemaからの型をインポートしてください
// import type { {{pascalCase featureName}}Values } from "../../../schemas/{{kebabCase featureName}}.schema";

type {{pascalCase routeName}}FormProps = {
  /** React Hook Formのcontrolオブジェクト */
  control: Control<any>; // TODO: 型を指定してください
  /** フォーム送信ハンドラー */
  onSubmit: (e?: React.BaseSyntheticEvent) => void;
  /** フォームリセットハンドラー */
  onReset: () => void;
  /** 送信中かどうか */
  isSubmitting: boolean;
};

/**
 * {{pascalCase routeName}}フォームコンポーネント（プレゼンテーション）
 *
 * ロジックは含まず、純粋な表示とイベント通知のみを行います。
 */
export const {{pascalCase routeName}}Form = ({
  control,
  onSubmit,
  onReset,
  isSubmitting,
}: {{pascalCase routeName}}FormProps) => {
  return (
    <PageLayout maxWidth="4xl">
      <PageHeader
        title="{{pascalCase routeName}}"
        description="{{pascalCase featureName}}の{{pascalCase routeName}}ページ"
      />

      <form onSubmit={onSubmit} className="space-y-8">
        <Card>
          <CardHeader>
            <CardTitle>基本情報</CardTitle>
            <CardDescription>
              {{pascalCase routeName}}の基本情報を入力してください
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-6">
            {/* TODO: 必要なフィールドを追加してください */}
            <p className="text-sm text-gray-500">フィールドを追加してください</p>
          </CardContent>
        </Card>

        <div className="flex gap-4">
          <Button type="submit" disabled={isSubmitting} className="flex-1">
            {isSubmitting ? "送信中..." : "送信"}
          </Button>
          <Button
            type="button"
            variant="outline"
            onClick={onReset}
            className="flex-1"
          >
            リセット
          </Button>
        </div>
      </form>
    </PageLayout>
  );
};
