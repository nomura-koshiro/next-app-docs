"use client";

import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
// TODO: 既存のschemaをインポートしてください
// import { {{camelCase featureName}}Schema, type {{pascalCase featureName}}Values } from "../../schemas/{{kebabCase featureName}}.schema";

/**
 * {{pascalCase routeName}}ページのカスタムフック
 *
 * フォームの状態管理とロジックを担当します。
 */
export const use{{pascalCase routeName}} = () => {
  // TODO: 既存のschemaを使用してください
  const form = useForm({
    // resolver: zodResolver({{camelCase featureName}}Schema),
    defaultValues: {
      // TODO: デフォルト値を設定してください
    },
  });

  const onSubmit = async (data: any) => {
    console.log("Form Data:", data);
    // TODO: 送信処理を実装してください
    alert(`フォームが送信されました！\n\n${JSON.stringify(data, null, 2)}`);
    form.reset();
  };

  const handleSubmit = form.handleSubmit(onSubmit);

  return {
    form,
    handleSubmit,
  };
};
